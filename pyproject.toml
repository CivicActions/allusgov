[project]
name = "allusgov"
version = "0.1.0"
description = "This project attempts to map the organization of the US Federal Government by gathering and consolidating information from various directories."
authors = [{ name = "Owen Barton", email = "owen.barton@civicactions.com" }]
license = { text = "GPL-3.0-or-later" }
readme = "README.md"
requires-python = ">=3.12,<3.13"
packages = [{ include = "allusgov" }]
keywords = []
classifiers = [
  "Development Status :: 1 - Planning",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.12",
]
dependencies = [
    "beautifulsoup4",
    "bigtree[image]",
    "click",
    "click-log",
    "flatten-json",
    "lxml>=5.2.1,<6",
    "natsort",
    "networkx[default]",
    "nltk",
    "numpy>=1.26.4,<2",
    "pandas>=2.2.2",
    "polars",
    "python-dotenv",
    "questionary",
    "rapidfuzz",
    "scrapy>=2.13.0",
    "spacy",
    "xlsx2csv",
]


[project.urls]
homepage = "https://pypi.org/project/allusgov"
repository = "https://github.com/civicactions/allusgov"
# documentation = "https://docs.allgov.us/"
changelog = "https://github.com/CivicActions/allusgov/blob/main/CHANGELOG.md"

[project.scripts]
allusgov = "allusgov.cli:main"

[dependency-groups]
dev = [
    "black",
    "coveragespace",
    "freezegun",
    "ipython",
    "isort",
    "mypy",
    "pydocstyle",
    "pyinstaller",
    "pylint",
    "pync ; sys_platform == 'darwin'",
    "pytest",
    "pytest-cov",
    "pytest-describe",
    "pytest-expecter",
    "pytest-random",
    "sniffer",
    "tabula-py",
    "tomli",
    "wrapt",
]


[tool.black]
quiet = true

[tool.isort]
profile = "black"

[tool.mypy]
ignore_missing_imports = true
no_implicit_optional = true
check_untyped_defs = true
cache_dir = ".cache/mypy/"

[tool.pytest.ini_options]
addopts = """
--strict-markers
-r sxX
--show-capture=log
--cov-report=html
--cov-report=term-missing:skip-covered
--no-cov-on-fail
"""
cache_dir = ".cache/pytest/"
markers = []

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"




